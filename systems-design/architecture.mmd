%%{init: {
  "theme": "dark",
  "themeVariables": {
    "primaryColor": "#0d1117",
    "primaryTextColor": "#e6edf3",
    "primaryBorderColor": "#30363d",
    "lineColor": "#58a6ff",
    "secondaryColor": "#161b22",
    "actorBorder": "#58a6ff",
    "actorBkg": "#1f6feb",
    "actorTextColor": "#ffffff",
    "signalColor": "#58a6ff",
    "loopTextColor": "#e6edf3",
    "altBackground": "#161b22",
    "altTextColor": "#e6edf3",
    "sequenceNumberColor": "#7ee787"
  }
}}%%

flowchart TD

subgraph RN["React Native App"]
    UI["User Interface"] --> CFG["Configuration Logic"]
    CFG --> BLE_TX["BLE Command Queue"]
end

subgraph MCU["Microcontroller (ItsyBitsy nRF52840)"]
    BLE_RX["BLE Listener (GATT Service)"]
    BLE_RX --> VALIDATE["Validation Layer"]
    VALIDATE -->|valid| RAMBUF["RAM Buffer / Staging Area"]
    VALIDATE -->|invalid| DROP["Discard / Ignore Command"]
    RAMBUF -->|Only if changed| COMMIT["Write to Non-Volatile Memory"]
    RAMBUF --> APPLY["Apply in Real-Time (LED, Effect, etc.)"]
end

RN -->|BLE connection| BLE_RX
COMMIT --> STATE["Persisted Configuration"]
STATE -->|Reboot / Power Cycle| RESTORE["Load Settings at Boot"]
RESTORE --> APPLY

%% Notes (use inline subgraph labels instead of 'note ... end note')
VALIDATE:::note
RN:::note2

classDef note fill:#333,color:#fff,stroke-width:0px,font-size:12px;
classDef note2 fill:#333,color:#fff,stroke-width:0px,font-size:12px;

%% You can simulate explanatory notes like this:
%% VALIDATE:::note means “attach note style to this node”.
%% RN:::note2 gives RN a subtle visual difference to indicate documentation.
